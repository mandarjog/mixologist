// Copyright 2016 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.api.servicecontrol.v1;

option cc_enable_arenas = true;
option java_multiple_files = true;
option java_outer_classname = "QuotaPropertiesProto";
option java_package = "com.google.api.servicecontrol.v1";

// Represents the properties needed for quota operations.
//
// Use the metric_value_sets field in Operation message to provide cost
// override with metric_name in <service_name>/quota/<quota_group_name>/cost
// format. Overrides for unmatched quota groups will be ignored.
// Costs are expected to be >= 0. Cost 0 will cause no quota check,
// but still traffic restrictions will be enforced.
message QuotaProperties {
  // Supported quota enforcement modes.
  enum QuotaMode {
    // Decreases available quota by the cost specified for the operation.
    // If cost is higher than available quota, operation fails and returns
    // error.
    ACQUIRE = 0;

    // Decreases available quota by the cost specified for the operation.
    // If cost is higher than available quota, operation does not fail and
    // available quota goes down to zero but it returns error.
    ACQUIRE_BEST_EFFORT = 1;

    // Does not change any available quota. Only checks if there is enough
    // quota.
    // No lock is placed on the checked tokens neither.
    CHECK = 2;

    // Increases available quota by the operation cost specified for the
    // operation.
    RELEASE = 3;
  }

  // Quota mode for this operation.
  QuotaMode quota_mode = 1;

  // LimitType IDs that should be used for checking quota. Key in this map
  // should be a valid LimitType string, and the value is the ID to be used. For
  // ex., an entry <USER, 123> will cause all user quota limits to use 123 as
  // the user ID. See google/api/quota.proto for the definition of LimitType.
  // CLIENT_PROJECT: Not supported.
  // USER: Value of this entry will be used for enforcing user-level quota
  //       limits. If none specified, caller IP passed in the
  //       servicecontrol.googleapis.com/caller_ip label will be used instead.
  //       If the server cannot resolve a value for this LimitType, an error
  //       will be thrown. No validation will be performed on this ID.
  map<string, string> limit_by_ids = 2;
}
