syntax = "proto3";

package google.logging.type;

option java_package = "com.google.logging.type";
option java_outer_classname = "LogSeverityProto";
option java_multiple_files = true;
// option (logs_proto.file_not_used_for_logging_except_enums) = true;

// import "logs/proto/logs_annotations/logs_annotations.proto";

// The severity of the event described in a log entry.  These guideline severity
// levels are ordered, with numerically smaller levels treated as less severe
// than numerically larger levels. If the source of the log entries uses a
// different set of severity levels, the client should select the closest
// corresponding `LogSeverity` value. For example, Java's FINE, FINER, and
// FINEST levels might all map to `LogSeverity.DEBUG`. If the original severity
// code must be preserved, it can be stored in the payload.
//
// (-- This list is intentionally not comprehensive; the intent is to provide a
// common set of "good enough" severity levels so that UIs can provide filtering
// and searching across log types. Users of the API are free not to use all
// severity levels in their log messages, and (if needed) to use a private field
// in their payload to store a more detailed severity code. --)
enum LogSeverity {
  // (--
  // Gaps left to allow adding new codes if needed, without perturbing the
  // numeric ordering.
  // --)

  // The log entry has no assigned severity level.
  DEFAULT = 0;
  // Debug or trace information.
  DEBUG = 100;
  // Routine information, such as ongoing status or performance.
  INFO = 200;
  // Normal but significant events, such as start up, shut down, or
  // configuration.
  NOTICE = 300;
  // Warning events might cause problems.
  WARNING = 400;
  // Error events are likely to cause problems.
  ERROR = 500;
  // Critical events cause more severe problems or brief outages.
  CRITICAL = 600;
  // A person must take an action immediately.
  ALERT = 700;
  // One or more systems are unusable.
  EMERGENCY = 800;
}
