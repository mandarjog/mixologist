_EVERY_SERVICE_:  # Applies to every interaction:- between all consumers and producers
        # This part of the config is 'owned' by the deployment
  serviceid: _EVERY_SERVICE_
  ingress:
    reporters:
    - kind: gcloud.logging

Service.Inventory.1: # service config that applies to id: 'Service.Inventory.1'
        # It is also 'owned' by this service
  serviceid: Service.Inventory.1
  # when the service reports directly send it to the following destination
  self:
    reporters:
    - kind: statsd
      params:
        host: statsd
        port: 9317
      # batch 200 reports before calling the adapter
      batchparams:
        size: 200
  ingress:
    checkers:
    # apply whitelist checker to *all* ingress
    - kind: whitelist
      params:
        provider_url: http://mywhitelist
    # apply 100/s rate limit to *all* ingress
    - kind: ratelimiter
      params:
        rate: 100/s
    reporters:
    - kind: statsd
      params:
        host: statsd
        port: 9317
  consumers:
    # binding specific config
    BindingID.1:
      serviceid: Service.Shipping.1
      checkers:
      # For Service.Shipping.1 consumer increase the limit to 1000/s
      - kind: ratelimiter
        params:
          rate: 1000/s
Service.Shipping.1:
  serviceid: Service.Shipping.1
  egress:
    reporters:
    - kind: aws.logging
  producers:
    # binding specific config
    # Same bindingID as above, but this config is 'owned' by Service.Shipping.1
    BindingID.1:
      serviceid: Service.Inventory.1
      checkers:
      # Calling Service.Inventory.1 is expensive. 'I' (Service.Shipping.1) would
      # like to have a much lower limit regardless of what I am allowed.
      # lower it to 5/s
      - kind: ratelimiter
        params:
          rate: 5/s
